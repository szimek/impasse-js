{
  "version": 3,
  "file": "impasse.js",
  "sourceRoot": "../",
  "sources": [
    "js/impasse.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# Helper for defining getters/setters in CoffeeScript - https://gist.github.com/1599437\nFunction::define = (prop, desc) ->\n  Object.defineProperty this.prototype, prop, desc\n\n\n# Hack for localStorage in Mobile Safari private browsing mode\nstorage = window.localStorage\ntry\n  storage.setItem(\"testPrivateBrowsingMode\", \"1\")\n  storage.removeItem(\"testPrivateBrowsingMode\")\ncatch error\n  if error.code is DOMException.QUOTA_EXCEEDED_ERR and storage.length is 0\n    storage = {}\n  else\n    throw error\n\n\nwindow.ig =\n  game: null\n\n  KEY:\n    LEFT: 37\n    UP: 38\n    RIGHT: 39\n    DOWN: 40\n    SHIFT: 16\n    HYPHEN: 173\n    EQUAL: 61\n    PLUS: 187\n    MINUS: 189\n\n  DIRECTION:\n    LEFT: 37\n    UP: 38\n    RIGHT: 39\n    DOWN: 40\n\nclass ig.Game\n  @entitiesMapping: {\n    \"1\": \"Player\"\n    \"2\": \"StaticBlock\"\n    \"3\": \"OrangeUpBlock\"\n    \"4\": \"PurpleDownBlock\"\n    \"5\": \"YellowUpBlock\"\n    \"6\": \"BlueDownBlock\"\n    \"7\": \"BlueMinusBlock\"\n    \"8\": \"WinBlock\"\n    \"9\": \"PinkMinusBlock\"\n    \"a\": \"RedXBlock\"\n    \"b\": \"GreenOBlock\"\n  }\n\n  @levels: [\n    { name: \"motion\", data: \"002000000010200002080000000200\" }\n    { name: \"pathway\", data: \"222200022210200202082000220002\" }\n    { name: \"wrap\", data: \"002000020010222222080000220000\" }\n    { name: \"surprise\", data: \"000033030010300003080030330000\" }\n    { name: \"going up\", data: \"020002000212323002380032322232\" }\n    { name: \"phase\", data: \"000032000010323003280230003322\" }\n    { name: \"weave\", data: \"004040204013424323480302030300\" }\n    { name: \"lock\", data: \"240032400210343442382224000332\" }\n    { name: \"bridge\", data: \"040322403014333444380020000200\" }\n    { name: \"flash\", data: \"002020700210702027780020702002\" }\n    { name: \"deception\", data: \"020703020217324327480207427742\" }\n    { name: \"sidestep\", data: \"237237320217007070480372370242\" }\n    { name: \"offbeat\", data: \"000970790010790970080070790900\" }\n    { name: \"hurdle\", data: \"090702000212473243280242909270\" }\n    { name: \"backdoor\", data: \"027702030712329342280992939307\" }\n    { name: \"axis\", data: \"000205200212504500080200402552\" }\n    { name: \"sweep\", data: \"025555555210000003080207040302\" }\n    { name: \"gate\", data: \"000220570012520453580207040352\" }\n    { name: \"unzip\", data: \"005634560010000000080056345600\" }\n    { name: \"twins\", data: \"076049503212654256380905070602\" }\n    { name: \"machine\", data: \"304030403012452245283670367036\" }\n    { name: \"reduction\", data: \"00ba039200100a0b66a800ba030b20\" }\n    { name: \"lure\", data: \"009630b2201256356ba8005ba50220\" }\n    { name: \"final dance\", data: \"05ba052222106079bba80560602222\" }\n  ]\n  @board:\n    height: 3\n    width: 10\n\n  @define 'currentLevelIndex',\n    get: ->\n      Number(@_currentLevelIndex or storage[\"currentLevel\"] or 0)\n    set: (value) ->\n      index = Number(value)\n      if index < 0\n        @_currentLevelIndex = 0\n      else if index >= ig.Game.levels.length\n        @_currentLevelIndex = ig.Game.levels.length - 1\n      else\n        @_currentLevelIndex = index\n      storage[\"currentLevel\"] = @_currentLevelIndex\n\n  currentLevel: undefined\n  isLevelOver: false\n  isGameOver: false\n\n  constructor: (options={}) ->\n    ig.game = @\n\n    storage[\"completedLevels\"] ||= JSON.stringify([])\n\n    # Create required DOM elements and draw the initial state of the game\n    # (without title, tiles etc.) before a level is loaded\n    @_createLayout()\n\n    # Load the initial level without fade-in\n    @loadLevel(@currentLevelIndex, false)\n\n    if options.fullscreen\n      window.addEventListener \"orientationchange\", (event) =>\n        @_rescaleLayout()\n      @_rescaleLayout()\n\n    # Handle player input\n    @_isCurrentlyPressed = {}\n    document.addEventListener \"keydown\", (event) =>\n      key = event.which\n      @_onKeyDown(event) unless @_isCurrentlyPressed[key]\n      @_isCurrentlyPressed[key] = true\n\n    document.addEventListener \"keyup\", (event) =>\n      @_isCurrentlyPressed[event.which] = false\n\n    if options.touch\n      # Disable scrolling on iOS. It also disables zooming.\n      document.ontouchmove = (event) ->\n        event.preventDefault()\n\n      [\"swipeLeft\", \"swipeRight\", \"swipeUp\", \"swipeDown\"].forEach (eventName) =>\n        $(@dom.overlay).on eventName, (event) =>\n          @_onSwipe(event)\n          event.preventDefault()\n\n      # Use Array#filter because of lack of Array#find\n      fullscreenFn = [\"requestFullscreen\", \"mozRequestFullScreen\", \"webkitRequestFullscreen\"].filter((fnName) =>\n        @dom.game[fnName]\n      )[0]\n\n      if fullscreenFn\n        $(@dom.game).on \"doubleTap\", (event) => @dom.game[fullscreenFn]()\n\n    # Hackish way to ensure that @_afterPlayerMoved is called just once\n    debouncedAfterPlayerMoved = $.debounce(100, true, (event) => @_afterPlayerMoved())\n    [\"transitionend\", \"webkitTransitionEnd\", \"oTransitionEnd\"].forEach (eventName) =>\n      @dom.board.addEventListener eventName, (event) ->\n        entity = event.target\n        debouncedAfterPlayerMoved(event) if entity.classList.contains(\"player\")\n\n  update: (direction) ->\n    level = @currentLevel\n    player = level.player\n    blocks = level.blocks\n\n    if (playerHasMoved = player.update(direction))\n      blocks.forEach (block) ->\n        block.uncover() # TODO move into Entity#update method\n        block.update(direction)\n\n      blocks.forEach (block) ->\n        block.cover() if block.isCovered(blocks)\n\n      # Check collisions\n      collidingBlocks = @_checkPlayerCollision()\n      collidingBlocks.forEach (block) =>\n        @_onPlayerCollision(block)\n\n    playerHasMoved\n\n  draw: ->\n    level = @currentLevel\n    level.blocks.forEach (block) -> block.draw()\n    level.player.draw()\n\n  loadLevel: (levelNumber, fadeIn = true) ->\n    # Reset game state\n    @isLevelOver = false\n    @isGameOver = false\n    @isPlayerMoving = false\n\n    mapping = ig.Game.entitiesMapping\n    level = ig.Game.levels[levelNumber]\n    board = ig.Game.board\n    player = null\n    blocks = []\n\n    @_resetLayout(levelNumber)\n\n    # Initialize all blocks and append them to the DOM\n    level.data.split(\"\").forEach (id, i) ->\n      # Skip empty cells\n      if id isnt \"0\"\n        x = i % board.width       # e.g. 12 % 10 = 2\n        y = (i - x) / board.width # e.g. (12 - 2) / 10 = 1\n        klass = mapping[id]\n        entity = new ig[klass](x, y)\n        if id is \"1\"\n          player = entity\n        else\n          blocks.push(entity)\n\n    @currentLevel =\n      number: levelNumber\n      name: level.name\n      player: player\n      blocks: blocks\n\n    # Set the initial position of DOM elements on the board\n    @draw()\n\n    @currentLevel\n\n  _createLayout: ->\n    game = document.getElementById(\"impasse\")\n    overlay = document.createElement(\"div\")\n    overlay.className = \"overlay\"\n    title = document.createElement(\"div\")\n    title.className = \"row title\"\n    board = document.createElement(\"div\")\n    board.className = \"row board\"\n    levelProgress = document.createElement(\"div\")\n    levelProgress.className = \"row level_progress\"\n\n    @dom =\n      document: document\n      game: game\n      overlay: game.appendChild(overlay)\n      title: game.appendChild(title)\n      board: game.appendChild(board)\n      levelProgress: game.appendChild(levelProgress)\n\n    # Create level progress markers\n    ig.Game.levels.forEach (level, index) =>\n      el = document.createElement(\"div\")\n      el.dataset.levelIndex = index\n      el.className = \"point\"\n      @dom.levelProgress.appendChild(el)\n\n  _resetLayout: (levelNumber) ->\n    level = ig.Game.levels[levelNumber]\n\n    @dom.game.classList.remove(\"game_over\")\n\n    # Remove all existing blocks from DOM\n    @dom.board.innerHTML = \"\"\n\n    # Update level title in DOM\n    @dom.title.innerHTML = level.name\n\n    # Update level progress markers in DOM\n    completedLevels = JSON.parse(storage[\"completedLevels\"])\n    points = @dom.levelProgress.getElementsByClassName(\"point\")\n    for el in points\n      el.classList.remove(\"active\")\n      el.classList.add(\"completed\") if Number(el.dataset.levelIndex) in completedLevels\n    point = @dom.levelProgress.querySelector(\".point[data-level-index='#{levelNumber}']\")\n    point.classList.add(\"active\")\n\n  _rescaleLayout: ->\n    game = $(@dom.game)\n    game.css(\"#{$.fx.cssPrefix}transform\", \"scale(1)\")\n    scale = window.innerWidth / 600\n    game.css(\"#{$.fx.cssPrefix}transform\", \"scale(#{scale})\")\n\n  _onKeyDown: (event) =>\n    unless @isPlayerMoving or @isLevelOver or @isGameOver\n      switch key = event.which\n        when ig.KEY.PLUS, ig.KEY.EQUAL\n          break unless @_isCurrentlyPressed[ig.KEY.SHIFT]\n          @currentLevelIndex += 1\n          @_onLevelOver()\n          event.preventDefault()\n        when ig.KEY.MINUS, ig.KEY.HYPHEN\n          break unless @_isCurrentlyPressed[ig.KEY.SHIFT]\n          @currentLevelIndex -= 1\n          @_onLevelOver()\n          event.preventDefault()\n        when ig.KEY.LEFT, ig.KEY.UP, ig.KEY.RIGHT, ig.KEY.DOWN\n          direction = key\n          @isPlayerMoving = @update(direction)\n          @draw() if @isPlayerMoving\n          event.preventDefault()\n\n  _onSwipe: (event) ->\n    unless @isPlayerMoving or @isLevelOver or @isGameOver\n      direction = switch event.type\n        when \"swipeLeft\" then ig.DIRECTION.LEFT\n        when \"swipeUp\" then ig.DIRECTION.UP\n        when \"swipeRight\" then ig.DIRECTION.RIGHT\n        when \"swipeDown\" then ig.DIRECTION.DOWN\n\n      @isPlayerMoving = @update(direction)\n      @draw() if @isPlayerMoving\n\n  _afterPlayerMoved: (event) ->\n    # Enable entity animation that may have been disabled by its update method\n    Array.prototype.slice.call(@dom.board.children).forEach (el) ->\n      el.classList.remove(\"no_transition\")\n\n    if @isGameOver\n      @_onGameOver()\n    else if @isLevelOver\n      @_onLevelOver()\n\n    @isPlayerMoving = false\n\n  _checkPlayerCollision: ->\n    level = @currentLevel\n\n    level.blocks.filter (block) -> level.player.doesCollideWith(block)\n\n  _onPlayerCollision: (block) ->\n    switch block.constructor\n      when ig.GreenOBlock\n        @_onGreenOBlockCollision(block)\n      when ig.WinBlock\n        @_onWinBlockCollision(block)\n        @isLevelOver = true\n      else\n        @isLevelOver = true\n\n  _onGreenOBlockCollision: (block) ->\n    block.isPresent = false\n\n    # Toggle presence of all red x block on the level\n    @currentLevel.blocks.forEach (el) ->\n      el.isPresent = !el.isPresent if el instanceof ig.RedXBlock\n\n  _onWinBlockCollision: (block) ->\n    if @currentLevelIndex is ig.Game.levels.length - 1\n      @isGameOver = true\n    else\n      completedLevels = JSON.parse(storage[\"completedLevels\"])\n      if completedLevels.indexOf(@currentLevelIndex) == -1\n        completedLevels.push(@currentLevelIndex)\n        storage[\"completedLevels\"] = JSON.stringify(completedLevels)\n\n      @currentLevelIndex += 1\n\n  _onLevelOver: ->\n    self = @\n    onTransitionEnd = (event) ->\n      # Restart the current level or load the next one\n      self.loadLevel(self.currentLevelIndex)\n\n      # Hide faded-in overlay without transition\n      overlay = self.dom.overlay\n      overlay.classList.add(\"no_transition\")\n      overlay.style.opacity = 0\n      overlay.classList.remove(\"no_transition\")\n\n      # Remove this listener to make sure it's executed just once per #_onLevelOver call\n      overlay.removeEventListener event.type, onTransitionEnd\n\n    [\"transitionend\", \"webkitTransitionEnd\", \"oTransitionEnd\"].forEach (eventName) =>\n      @dom.overlay.addEventListener eventName, onTransitionEnd\n\n    # Fade in the overlay\n    @dom.overlay.style.opacity = 1\n\n  _onGameOver: ->\n    @dom.game.classList.add(\"game_over\")\n    @dom.board.innerHTML = \"\"\"\n      You've reached the end of this puzzling journey.\n      <br>\n      Looking forward to travelling with you again!\n      <br><br>\n      Regards, Wanderlands\n      \"\"\"\n\nclass ig.Entity\n  @id: \"0\"\n  @zIndex: 0\n  @className: \"\"\n  @showBorderWhenHidden: false\n\n  @define 'isPresent',\n    get: ->\n      return @_present\n    set: (value) ->\n      @_present = Boolean(value)\n      method = if @_present then \"remove\" else \"add\"\n      @el.forEach (el) -> el.classList[method](\"hidden\")\n      @\n\n  constructor: (x, y) ->\n    dom = ig.game.dom\n\n    @pos = x: x, y: y\n    @el = [1..3].map (item) =>\n      el = dom.document.createElement(\"div\")\n      el.className = \"entity #{@constructor.className}\"\n      el.style.zIndex = @constructor.zIndex\n      dom.board.appendChild(el)\n      el\n    @isPresent = true\n\n  update: (direction) ->\n    false\n\n  # Change position of DOM elements - animation is handled by CSS transitions.\n  draw: () ->\n    margin = 8\n    blockDiameter = 44\n    totalDiameter  = 2 * margin + blockDiameter\n\n    @el.forEach (el, index) =>\n      index -= 1 # map [0, 1, 2] to [-1, 0, +1]\n      offset = index * ig.Game.board.height * totalDiameter\n      el.style.top = (margin + @pos.y * (totalDiameter)) + offset + \"px\"\n      el.style.left = (margin + @pos.x * (totalDiameter)) + \"px\"\n\n  doesCollideWith: (other) ->\n    other.isPresent and @pos.x is other.pos.x and @pos.y is other.pos.y\n\n  isCovered: (blocks) ->\n    others = blocks.filter (block) =>\n      true if @ isnt block and @doesCollideWith(block)\n\n    # Sorting is not really needed, as it's probably not possible to\n    # have more than 2 blocks at the same position\n    if others.length\n      others.sort (a, b) ->\n        a.constructor.zIndex - b.constructor.zIndex\n      @constructor.zIndex < others[0].constructor.zIndex\n    else\n      false\n\n  cover: ->\n    @el.forEach (el) ->\n      el.classList.add(\"covered\")\n\n  uncover: ->\n    @el.forEach (el) ->\n      el.classList.remove(\"covered\")\n\n  _up: ->\n    @pos.y -= 1\n    if @pos.y is -1\n      @pos.y = ig.Game.board.height - 1\n      el = @el.shift(); @el.push(el)\n      el.classList.add(\"no_transition\")\n\n  _down: ->\n    @pos.y += 1\n    if @pos.y is ig.Game.board.height\n      @pos.y = 0\n      el = @el.pop(); @el.unshift(el)\n      el.classList.add(\"no_transition\")\n\nclass ig.Player extends ig.Entity\n  @id: \"1\"\n  @zIndex: 5\n  @className: \"player\"\n\n  update: (direction) ->\n    switch direction\n      when ig.KEY.LEFT\n        return false if @pos.x is 0\n        @pos.x -= 1\n        true\n      when ig.KEY.RIGHT\n        return false if @pos.x is ig.Game.board.width - 1\n        @pos.x += 1\n        true\n      when ig.KEY.UP\n        @_up()\n        true\n      when ig.KEY.DOWN\n        @_down()\n        true\n\nclass ig.StaticBlock extends ig.Entity\n  @id: \"2\"\n  @className: \"static\"\n\nclass ig.OrangeUpBlock extends ig.Entity\n  @id: \"3\"\n  @zIndex: 2\n  @className: \"orange_up_block\"\n\n  update: (direction) ->\n    switch direction\n      when ig.KEY.LEFT, ig.KEY.RIGHT\n        false\n      when ig.KEY.UP, ig.KEY.DOWN\n        @_up()\n        true\n\nclass ig.PurpleDownBlock extends ig.Entity\n  @id: \"4\"\n  @zIndex: 2\n  @className: \"purple_down_block\"\n\n  update: (direction) ->\n    switch direction\n      when ig.KEY.LEFT, ig.KEY.RIGHT\n        false\n      when ig.KEY.UP, ig.KEY.DOWN\n        @_down()\n        true\n\nclass ig.YellowUpBlock extends ig.Entity\n  @id: \"5\"\n  @zIndex: 3\n  @className: \"yellow_up_block\"\n\n  update: (direction) ->\n    switch direction\n      when ig.KEY.LEFT, ig.KEY.RIGHT\n        @_up()\n        true\n      when ig.KEY.UP, ig.KEY.DOWN\n        false\n\nclass ig.BlueDownBlock extends ig.Entity\n  @id: \"6\"\n  @zIndex: 3\n  @className: \"blue_down_block\"\n\n  update: (direction) ->\n    switch direction\n      when ig.KEY.LEFT, ig.KEY.RIGHT\n        @_down()\n        true\n      when ig.KEY.UP, ig.KEY.DOWN\n        false\n\nclass ig.BlueMinusBlock extends ig.Entity\n  @id: \"7\"\n  @zIndex: 4\n  @className: \"blue_minus_block hideable\"\n\n  update: (direction) ->\n    switch direction\n      when ig.KEY.LEFT, ig.KEY.RIGHT\n        false\n      when ig.KEY.UP, ig.KEY.DOWN\n        @isPresent = !@isPresent\n        true\n\nclass ig.WinBlock extends ig.Entity\n  @id: \"8\"\n  @className: \"win_block\"\n\nclass ig.PinkMinusBlock extends ig.Entity\n  @id: \"9\"\n  @zIndex: 4\n  @className: \"pink_minus_block hideable\"\n\n  constructor: (x, y) ->\n    super(x, y)\n    @isPresent = false\n\n  update: (direction) ->\n    switch direction\n      when ig.KEY.LEFT, ig.KEY.RIGHT\n        false\n      when ig.KEY.UP, ig.KEY.DOWN\n        @isPresent = !@isPresent\n        true\n\nclass ig.RedXBlock extends ig.Entity\n  @id: \"a\"\n  @zIndex: 4\n  @className: \"red_x_block hideable\"\n  @showBorderWhenHidden: true\n\nclass ig.GreenOBlock extends ig.Entity\n  @id: \"b\"\n  @zIndex: 4\n  @className: \"green_o_block\"\n"
  ]
}